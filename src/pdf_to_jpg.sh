#!/bin/bash

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –∑–∞ –Ω–∞–ª–∏—á–Ω–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏
MISSING=()
REQUIRED=("pdftoppm" "pdfinfo" "zenity" "yad")

for cmd in "${REQUIRED[@]}"; do
    if ! command -v "$cmd" >/dev/null 2>&1; then
        MISSING+=("$cmd")
    fi
done

if (( ${#MISSING[@]} > 0 )); then
    zenity --error --title="–õ–∏–ø—Å–≤–∞—â–∏ –∑–∞–≤–∏—Å–∏–º–æ—Å—Ç–∏" --text="–°–ª–µ–¥–Ω–∏—Ç–µ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–∏ –Ω–µ —Å–∞ –∏–Ω—Å—Ç–∞–ª–∏—Ä–∞–Ω–∏:\n${MISSING[*]}"
    exit 1
fi

FILE="$1"

# –ü—Ä–æ–≤–µ—Ä–∫–∞ –¥–∞–ª–∏ —Ñ–∞–π–ª—ä—Ç –µ PDF
if [[ "${FILE##*.}" != "pdf" ]]; then
    zenity --error --title="–ì—Ä–µ—à–µ–Ω —Ñ–æ—Ä–º–∞—Ç" --text="–ò–∑–±—Ä–∞–Ω–∏—è—Ç —Ñ–∞–π–ª –Ω–µ –µ PDF —Ñ–∞–π–ª."; exit 1;
fi

TOTAL=$(pdfinfo "$FILE" | grep "Pages" | awk '{print $2}')

PAGES=$(zenity --entry --title="PDF –∫—ä–º JPG" --text="–°—Ç—Ä–∞–Ω–∏—Ü–∏ –∑–∞ –µ–∫—Å–ø–æ—Ä—Ç–∏—Ä–∞–Ω–µ (–Ω–∞–ø—Ä. 1-3,5,7 –∏–ª–∏ all):")
if [[ -z "$PAGES" ]]; then
    exit 0
fi

group_ranges() {
    local arr=($(printf '%s\n' "$@" | sort -n))
    local output=""
    local start=${arr[0]}
    local end=$start
    for (( i=1; i<${#arr[@]}; i++ )); do
        if (( arr[i] == end + 1 )); then
            end=${arr[i]}
        else
            if (( start == end )); then
                output+="$start,"
            else
                output+="$start-$end,"
            fi
            start=${arr[i]}
            end=$start
        fi
    done
    if (( start == end )); then
        output+="$start"
    else
        output+="$start-$end"
    fi
    echo "$output"
}

BASENAME=$(basename "$FILE" .pdf)
OUTPUT_DIR="$(dirname "$FILE")/${BASENAME}_jpg"
mkdir -p "$OUTPUT_DIR"

PAGE_LIST=()
if [[ "${PAGES,,}" == "all" ]]; then
    for (( i=1; i<=TOTAL; i++ )); do
        PAGE_LIST+=("$i")
    done
else
    IFS=',' read -ra PARTS <<< "$PAGES"
    for PART in "${PARTS[@]}"; do
        if [[ "$PART" == *"-"* ]]; then
            START=${PART%-*}
            END=${PART#*-}
            for (( i=START; i<=END; i++ )); do
                PAGE_LIST+=("$i")
            done
        else
            PAGE_LIST+=("$PART")
        fi
    done
fi

EXPORTED=0
SKIPPED=()
INVALID=()

# YAD –ª–æ–≥ —á—Ä–µ–∑ –∏–º–µ–Ω–æ–≤–∞–Ω pipe
LOG_PIPE="/tmp/pdf_export_log_$$"
mkfifo "$LOG_PIPE"

yad --title="–ï–∫—Å–ø–æ—Ä—Ç–∏—Ä–∞–Ω–µ –Ω–∞ PDF —Å—Ç—Ä–∞–Ω–∏—Ü–∏" \
    --width=600 --height=300 \
    --text-info \
    --fontname="Monospace 10" \
    --center \
    --tail < "$LOG_PIPE" &
LOG_PID=$!

exec 3> "$LOG_PIPE"

for i in "${PAGE_LIST[@]}"; do
    if (( i >= 1 && i <= TOTAL )); then
        OUTFILE="${OUTPUT_DIR}/page-${i}.jpg"
        if [[ -f "$OUTFILE" ]]; then
            SKIPPED+=("$i")
        else
            pdftoppm -jpeg -f "$i" -l "$i" "$FILE" "$OUTPUT_DIR/tmp_page" >/dev/null 2>&1
            mv "${OUTPUT_DIR}/tmp_page-${i}.jpg" "$OUTFILE"
            echo "$OUTFILE" >&3
            ((EXPORTED++))
        fi
    else
        INVALID+=("$i")
    fi
done

# –ó–∞—Ç–≤–∞—Ä—è–Ω–µ –Ω–∞ –ª–æ–≥ –ø—Ä–æ–∑–æ—Ä–µ—Ü–∞
exec 3>&-         # –∑–∞—Ç–≤–æ—Ä–∏ pipe-–∞ (–∫—Ä–∞–π –Ω–∞ –ø–∏—Å–∞–Ω–µ)
sleep 0.5         # –º–∞–ª–∫–∞ –ø–∞—É–∑–∞, –∑–∞ –¥–∞ –∑–∞–≤—ä—Ä—à–∏ –≤–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è—Ç–∞
kill "$LOG_PID" 2>/dev/null
wait "$LOG_PID" 2>/dev/null
rm -f "$LOG_PIPE"

# –°–ø–µ—Ü–∏–∞–ª–Ω–æ —Å—ä–æ–±—â–µ–Ω–∏–µ –∞–∫–æ –µ —Å–∞–º–æ 1 –∏ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞
if [[ "$PAGES" =~ ^[0-9]+$ ]] && [[ "${#SKIPPED[@]}" -eq 1 ]] && [[ "$EXPORTED" -eq 0 ]]; then
    zenity --info --title="–ò–Ω—Ñ–æ—Ä–º–∞—Ü–∏—è" --text="‚ÑπÔ∏è –°—Ç—Ä–∞–Ω–∏—Ü–∞ $PAGES —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ –∏ –Ω–µ –µ –∏–∑–≤–ª–µ—á–µ–Ω–∞."
    exit 0
fi

RANGE_ALL=$(group_ranges "${PAGE_LIST[@]}")
RANGE_SKIPPED=$(group_ranges "${SKIPPED[@]}")
RANGE_INVALID=$(group_ranges "${INVALID[@]}")

# –§–∏–Ω–∞–ª–Ω–∏ —Å—ä–æ–±—â–µ–Ω–∏—è
if (( EXPORTED > 0 )); then
    MSG="üì§ –û–±—Ä–∞–±–æ—Ç–µ–Ω–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∏: $RANGE_ALL\n\nüìÅ –§–∞–π–ª–æ–≤–µ—Ç–µ —Å–µ –Ω–∞–º–∏—Ä–∞—Ç –≤:\n$OUTPUT_DIR"
    if (( ${#SKIPPED[@]} > 0 )); then
        MSG+="\n\n‚ÑπÔ∏è –°–ª–µ–¥–Ω–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∏ –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—Ç –∏ –Ω–µ –±—è—Ö–∞ –∏–∑–≤–ª–µ—á–µ–Ω–∏ –ø–æ–≤—Ç–æ—Ä–Ω–æ: $RANGE_SKIPPED"
    fi
    if (( ${#INVALID[@]} > 0 )); then
        MSG+="\n\n‚ö†Ô∏è –ù–µ–≤–∞–ª–∏–¥–Ω–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∏ (—Ñ–∞–π–ª—ä—Ç –∏–º–∞ $TOTAL): $RANGE_INVALID"
    fi
    zenity --info --title="–ì–æ—Ç–æ–≤–æ!" --text="$(echo -e "$MSG")"

elif (( EXPORTED == 0 && ${#SKIPPED[@]} > 0 )); then
    MSG="‚ÑπÔ∏è –í—Å–∏—á–∫–∏ –∏–∑–±—Ä–∞–Ω–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∏ –≤–µ—á–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞—Ç:\n$RANGE_SKIPPED"
    zenity --info --title="–ù—è–º–∞ –Ω—É–∂–¥–∞ –æ—Ç –¥–µ–π—Å—Ç–≤–∏–µ" --text="$(echo -e "$MSG")"

elif (( ${#INVALID[@]} > 0 )); then
    MSG="‚ö†Ô∏è –ù–µ–≤–∞–ª–∏–¥–Ω–∏ —Å—Ç—Ä–∞–Ω–∏—Ü–∏ (—Ñ–∞–π–ª—ä—Ç –∏–º–∞ $TOTAL):\n–í—ä–≤–µ–¥–µ–Ω–∞ –≥—Ä–µ—à–Ω–∞ —Å—Ç–æ–π–Ω–æ—Å—Ç: $RANGE_INVALID"
    zenity --error --title="–ì—Ä–µ—à–∫–∞" --text="$(echo -e "$MSG")"

else
    zenity --error --title="–ì—Ä–µ—à–∫–∞" --text="–ù–∏—Ç–æ –µ–¥–Ω–∞ –æ—Ç –≤—ä–≤–µ–¥–µ–Ω–∏—Ç–µ —Å—Ç—Ä–∞–Ω–∏—Ü–∏ –Ω–µ —Å—ä—â–µ—Å—Ç–≤—É–≤–∞ –∏ –Ω—è–º–∞ –∫–∞–∫–≤–æ –¥–∞ —Å–µ –∏–∑–≤–ª–µ—á–µ."
fi
